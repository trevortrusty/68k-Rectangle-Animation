00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 7/19/2020 5:21:29 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9      ** SET DRAWING PROPERTIES
00001000  223C 00FFFFFF             10      move.l  #$00FFFFFF,D1 ; pen color choice (white)
00001006  303C 0050                 11      move    #80,D0         ; set trap
0000100A  4E4F                      12      trap    #15            ; set pen color
0000100C                            13      
0000100C  223C 000000FF             14      move.l  #$000000FF,D1 ; fill color choice (red)
00001012  303C 0051                 15      move #81,D0
00001016  4E4F                      16      trap #15
00001018                            17  
00001018                            18  
00001018                            19      *initialize rectangle pos
00001018  323C 0032                 20      move.w #50, D1 ; x1
0000101C  363C 0078                 21      move.w #120, D3 ; x2
00001020  343C 0032                 22      move.w #50, D2 ; y1
00001024  383C 0078                 23      move.w #120, D4 ; y2
00001028                            24      
00001028                            25      *begin animation
00001028                            26      ;jsr draw_rect
00001028                            27      ;jsr move_right
00001028                            28      ;jsr draw_rect
00001028                            29      ;jsr move_right
00001028                            30      ;jsr draw_rect
00001028                            31      ;jsr move_right
00001028                            32      ;jsr draw_rect
00001028                            33      ;jsr move_right
00001028                            34      ;jsr draw_rect
00001028  4EF9 00001032             35      jmp loop_right
0000102E                            36      
0000102E  FFFF FFFF                 37      SIMHALT             ; halt simulator
00001032                            38  
00001032                            39  loop_right:
00001032  4EB9 00001060             40      jsr draw_rect
00001038  4EB9 00001074             41      jsr move_right
0000103E  B27C 01F4                 42      cmp #500,D1
00001042  6C00 0006                 43      BGE loop_left
00001046  4EF8 1032                 44      jmp loop_right
0000104A                            45      
0000104A                            46  loop_left:
0000104A  4EB9 00001060             47      jsr draw_rect
00001050  4EB9 0000107E             48      jsr move_left
00001056  B27C 0032                 49      cmp #50,D1
0000105A  6FD6                      50      BLE loop_right
0000105C  4EF8 104A                 51      jmp loop_left
00001060                            52  
00001060                            53  draw_rect:    
00001060  4EB9 00001096             54      jsr cls
00001066  303C 0057                 55      move    #87,D0         ; filled rect trap
0000106A  4E4F                      56      trap    #15     ; draw rectangle
0000106C  4EB9 00001088             57      jsr delay
00001072  4E75                      58      rts
00001074                            59      
00001074                            60  move_right:
00001074  0641 0014                 61      add #20,D1
00001078  0643 0014                 62      add #20,D3
0000107C  4E75                      63      rts
0000107E                            64      
0000107E                            65  move_left:
0000107E  0441 0014                 66      sub #20,D1
00001082  0443 0014                 67      sub #20,D3
00001086  4E75                      68      rts
00001088                            69  
00001088                            70  delay:
00001088  303C 0017                 71      move #23,D0
0000108C                            72      
0000108C                            73      **backup D1**
0000108C  3E01                      74      move D1,D7
0000108E                            75      
0000108E                            76      **execute delay trap**
0000108E  7202                      77      move.l #2,D1 ; set time in 1/100 second
00001090  4E4F                      78      trap #15
00001092                            79      
00001092                            80      **restore D1**
00001092  2207                      81      move.l D7,D1    
00001094  4E75                      82      rts
00001096                            83  
00001096                            84  cls:
00001096  303C 000B                 85      move #11,D0
0000109A  3C01                      86      move D1,D6 ; temp backup D1
0000109C  323C FF00                 87      move.w #$FF00,D1 
000010A0  4E4F                      88      trap #15
000010A2  3206                      89      move D6,D1 ; restore D1
000010A4  4E75                      90      rts
000010A6                            91     
000010A6                            92      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CLS                 1096
DELAY               1088
DRAW_RECT           1060
LOOP_LEFT           104A
LOOP_RIGHT          1032
MOVE_LEFT           107E
MOVE_RIGHT          1074
START               1000
